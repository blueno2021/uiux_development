{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jacobdispirito/Documents/development/src/FilteredList.js\";\nimport React, { Component } from 'react';\nimport DisplayList from './DisplayList';\nimport { Navbar, Nav } from 'react-bootstrap';\nexport default class FilteredList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelectFilterTonyWinners = event => {\n      console.log(\"HELLo\");\n      this.setState({\n        tonyWinner: event\n      });\n    };\n\n    this.onSelectFilterOnBroadway = event => {\n      this.setState({\n        onBroadway: event\n      });\n    };\n\n    this.matchesFilterTonyWinner = item => {\n      // all items should be shown when no filter is selected\n      if (this.state.tonyWinner === 'All') {\n        return true;\n      } else if (this.state.tonyWinner === item.tony) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.state = {\n      tonyWinner: \"All\",\n      onBroadway: \"All\"\n    };\n    this.onSelectFilterTonyWinners = this.onSelectFilterTonyWinners.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [console.log(this.state.tonyWinner), /*#__PURE__*/_jsxDEV(Navbar, {\n          bg: \"light\",\n          variant: \"light\",\n          children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n            children: \"Tony Winner for Best Musical:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Nav, {\n            className: \"mr-auto\",\n            children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n              children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                eventKey: \"All\",\n                onSelect: this.onSelectFilterTonyWinner,\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n              children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                eventKey: \"Yes\",\n                onSelect: this.onSelectFilterTonyWinner,\n                children: \"Yes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Nav.Link, {\n                eventKey: \"No\",\n                onSelect: this.onSelectFilterTonyWinner,\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(DisplayList, {\n        list: this.props.list.filter(this.matchesFilterTonyWinner)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jacobdispirito/Documents/development/src/FilteredList.js"],"names":["React","Component","DisplayList","Navbar","Nav","FilteredList","constructor","props","onSelectFilterTonyWinners","event","console","log","setState","tonyWinner","onSelectFilterOnBroadway","onBroadway","matchesFilterTonyWinner","item","state","tony","bind","render","onSelectFilterTonyWinner","list","filter"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,MAAR,EAAgBC,GAAhB,QAA0B,iBAA1B;AAEA,eAAe,MAAMC,YAAN,SAA2BL,KAAK,CAACC,SAAjC,CAA2C;AACtDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,yBATmB,GASSC,KAAK,IAAI;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,UAAU,EAAEJ;AADF,OAAd;AAGH,KAdkB;;AAAA,SAenBK,wBAfmB,GAeQL,KAAK,IAAI;AAChC,WAAKG,QAAL,CAAc;AACVG,QAAAA,UAAU,EAAEN;AADF,OAAd;AAGH,KAnBkB;;AAAA,SAqBnBO,uBArBmB,GAqBOC,IAAI,IAAI;AAC9B;AACA,UAAG,KAAKC,KAAL,CAAWL,UAAX,KAA0B,KAA7B,EAAoC;AAChC,eAAO,IAAP;AACH,OAFD,MAEO,IAAI,KAAKK,KAAL,CAAWL,UAAX,KAA0BI,IAAI,CAACE,IAAnC,EAAyC;AAC5C,eAAO,IAAP;AACH,OAFM,MAEA;AACH,eAAO,KAAP;AACH;AACJ,KA9BkB;;AAEf,SAAKD,KAAL,GAAa;AACTL,MAAAA,UAAU,EAAE,KADH;AAETE,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIA,SAAKP,yBAAL,GAA+B,KAAKA,yBAAL,CAA+BY,IAA/B,CAAoC,IAApC,CAA/B;AACH;;AA2BDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACG;AAAA,mBACEX,OAAO,CAACC,GAAR,CAAY,KAAKO,KAAL,CAAWL,UAAvB,CADF,eAEC,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAC,OAAX;AAAmB,UAAA,OAAO,EAAC,OAA3B;AAAA,kCACI,QAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,oCACI,QAAC,GAAD,CAAK,IAAL;AAAA,qCAAU,QAAC,GAAD,CAAK,IAAL;AAAU,gBAAA,QAAQ,EAAC,KAAnB;AAAyB,gBAAA,QAAQ,EAAE,KAAKS,wBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAV;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,GAAD,CAAK,IAAL;AAAA,qCAAU,QAAC,GAAD,CAAK,IAAL;AAAU,gBAAA,QAAQ,EAAC,KAAnB;AAAyB,gBAAA,QAAQ,EAAE,KAAKA,wBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAV;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,GAAD,CAAK,IAAL;AAAA,2CAAW,QAAC,GAAD,CAAK,IAAL;AAAU,gBAAA,QAAQ,EAAC,IAAnB;AAAwB,gBAAA,QAAQ,EAAE,KAAKA,wBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAX;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAYI,QAAC,WAAD;AAAa,QAAA,IAAI,EAAE,KAAKf,KAAL,CAAWgB,IAAX,CAAgBC,MAAhB,CAAuB,KAAKR,uBAA5B;AAAnB;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AApDqD","sourcesContent":["import React, { Component } from 'react';\nimport DisplayList from './DisplayList'\nimport {Navbar, Nav} from 'react-bootstrap'\n\nexport default class FilteredList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tonyWinner: \"All\", \n            onBroadway: \"All\"\n        };\n        this.onSelectFilterTonyWinners=this.onSelectFilterTonyWinners.bind(this)\n    }\n\n    onSelectFilterTonyWinners = event => {\n        console.log(\"HELLo\")\n        this.setState({\n            tonyWinner: event\n        })\n    };\n    onSelectFilterOnBroadway = event => {\n        this.setState({\n            onBroadway: event\n        })\n    };\n\n    matchesFilterTonyWinner = item => {\n        // all items should be shown when no filter is selected\n        if(this.state.tonyWinner === 'All') { \n            return true\n        } else if (this.state.tonyWinner === item.tony) {\n            return true\n        } else {\n            return false\n        }\n    }\n    \n    \n    \n    render(){\n        return(\n            <div>\n               <div>\n                {console.log(this.state.tonyWinner)}\n                <Navbar bg=\"light\" variant=\"light\">\n                    <Navbar.Brand>Tony Winner for Best Musical:</Navbar.Brand>\n                    <Nav className=\"mr-auto\">\n                        <Nav.Item><Nav.Link eventKey=\"All\" onSelect={this.onSelectFilterTonyWinner}>All</Nav.Link></Nav.Item>\n                        <Nav.Item><Nav.Link eventKey=\"Yes\" onSelect={this.onSelectFilterTonyWinner}>Yes</Nav.Link></Nav.Item>\n                        <Nav.Item> <Nav.Link eventKey=\"No\" onSelect={this.onSelectFilterTonyWinner}>No</Nav.Link></Nav.Item>\n                    </Nav>\n                </Navbar>\n                </div>\n                <DisplayList list={this.props.list.filter(this.matchesFilterTonyWinner)} />\n            </div>        \n        )\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}